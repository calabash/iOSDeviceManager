trigger:
  tags:
    include:
    - '*'
  branches:
    include:
    - master
    - develop
pr:
  branches:
    include:
    - master
    - develop

jobs:
- job:

  strategy:
    matrix:
      BigSur-Xcode-12.5:
        IMAGE_POOL: 'macOS-11'
        XCODE_VERSION: '12.5'
      BigSur-Xcode-13.0:
        IMAGE_POOL: 'macOS-11'
        XCODE_VERSION: '13.0'
  timeoutInMinutes: 180
  pool:
    vmImage: $(IMAGE_POOL)
  variables:
  - group: XTCRunTimeArtifactsCI

  steps:

  - script: |
      # Attempts to fix this problem:
      # Unable to boot device due to insufficient system resources.
      set -e
      echo "### launchctl limits: before ###"
      sudo launchctl limit

      # 2500 is a hard limit
      sudo launchctl limit maxproc 2048 2500
      # values derived empirically
      # 'unlimited' is recommended by Apple, but does not work => 10240
      #   which could be a function of the amount of RAM available.
      sudo launchctl limit maxfiles 52428 600000

      echo "### launchctl limits: after ###"
      sudo launchctl limit
    displayName: "Setting maxproc and maxfiles limits"

  - script: |
      set -e
      sudo xcode-select --switch "/Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer"
      echo "Xcode version: $(xcrun xcodebuild -version)"
      echo "Xcode path: $(xcrun -f xcodebuild)"
      echo "Xcode select path: $(xcode-select --print-path)"
    displayName: "Select Xcode $(XCODE_VERSION)"

  - script: |
      set -e
      git clone -b master https://$(CalabashKeychainGitHubAccessToken):x-oauth-basic@github.com/xamarinhq/calabash-codesign.git
      calabash-codesign/apple/create-keychain.sh
    displayName: "Download and install keychain"

  - script: |
      set -e
      ruby -v
      echo -e "install: --no-document --env-shebang\nupdate:  --no-document --env-shebang" > ~/.gemrc
      bundle install
    displayName: "Prepare Ruby environment"

  - script: make build
    displayName: "Make build"

  - script: make unit-tests
    displayName: "Make unit-tests"

  - script: make integration-tests
    displayName: "Make integration-tests"

  - script: make rspec
    displayName: "Make rspec"

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: 'reports/*.xml'
    condition: always()
